@page "/teams"
@using Esport.Shared.DTO
@using Esport.Shared.Helpers
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Drużyny</h3>

<div class="card-container">
    @if (teams == null)
    {
        <p>Ładowanie drużyn...</p>
    }
    else
    {
        @foreach (var team in teams)
        {
            <div class="team-card"
                 @onmouseover="() => ShowPlayers(team.Id)"
                 @onmouseleave="HidePlayers">
                <!-- Nagłówek z nazwą drużyny jako link -->
                <div class="team-header">
                    <span class="team-name-link" @onclick="() => GoToTeamProfile(team.Id)">
                        <h4>@team.Name</h4>
                    </span>
                </div>
                <!-- Kontener ze zdjęciem drużyny -->
                <div class="team-image-container">
                    <img class="team-image @(hoveredTeamId == team.Id ? "blurred" : "")" src="@($"/teamlogo/{team.Id}.png")" alt="@team.Name" />
                    @if (hoveredTeamId == team.Id)
                    {
                        <div class="players-overlay">
                            @if (team.Players != null && team.Players.Count > 0)
                            {
                                <ul>
                                    @foreach (var player in team.Players)
                                    {
                                        <li>
                                            <span class="player-link" @onclick="() => GoToPlayerProfile(player.Id)">
                                                <img class="flag" src="@FlagHelper.GetFlagUrl(player.Country)" alt="@player.Country" />
                                                @player.FirstName "@player.Nickname" @player.LastName
                                            </span>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>Brak graczy</p>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

@code {
    List<TeamDto>? teams;
    int? hoveredTeamId = null;

    protected override async Task OnInitializedAsync()
    {
        teams = await Http.GetFromJsonAsync<List<TeamDto>>("api/teams");
    }

    void ShowPlayers(int teamId)
    {
        hoveredTeamId = teamId;
    }

    void HidePlayers()
    {
        hoveredTeamId = null;
    }

    private void GoToPlayerProfile(int id)
    {
        NavigationManager.NavigateTo($"/playerprofile/{id}");
    }

    private void GoToTeamProfile(int id)
    {
        NavigationManager.NavigateTo($"/teamprofile/{id}");
    }
}


<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
    }

    .team-card {
        width: 300px;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        background-color: #fff;
        position: relative;
    }

    .team-card:hover {
        transform: scale(1.02);
    }

    .team-header {
        padding: 0.5rem;
        text-align: center;
        background-color: #f0f0f0;
    }

    .team-header h4 {
        margin: 0;
        font-size: 1.2rem;
        font-weight: bold;
    }

    /* Styl dla nazwy drużyny jako link */
    .team-name-link {
        color: inherit;           /* Dziedziczy kolor z rodzica */
        text-decoration: none;    /* Bez podkreślenia */
        cursor: pointer;          /* Kursor wskazuje, że element jest klikalny */
        transition: color 0.3s;
    }

    .team-name-link:hover {
        color: var(--primary-color);
    }

    .team-image-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 200px;  /* Ustalona wysokość kontenera dla lepszego efektu */
        overflow: hidden;
        position: relative;
    }

    .team-image {
        width: 50%;
        transition: filter 0.3s ease-in-out;
    }

    .team-image.blurred {
        filter: blur(8px);
    }

    .players-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 0.5rem;
    }

    .players-overlay ul {
        list-style: none;
        padding: 0;
        margin: 0;
        text-align: center;
        width: 100%;
    }

    .players-overlay li {
        margin-bottom: 0.3rem;
        font-size: 0.9rem;
    }

    .flag {
        width: 20px;
        height: auto;
        margin-left: 0.5rem;
        vertical-align: middle;
    }

    .player-link {
        color: inherit;           /* Dziedziczy kolor z rodzica */
        text-decoration: none;    /* Bez podkreślenia */
        cursor: pointer;          /* Kursor wskazuje, że element jest klikalny */
        transition: color 0.3s;

    .player-link:hover {
        color: var(--primary-color); /* Możesz ustawić zmienną lub konkretny kolor */
    }
</style>
