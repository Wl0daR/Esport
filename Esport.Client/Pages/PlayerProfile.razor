@page "/playerprofile/{PlayerId:int}"
@using Esport.Shared.DTO
@inject HttpClient Http

<h3>Profil Gracza</h3>

@if (player == null)
{
    <p>Ładowanie informacji o graczu...</p>
}
else
{
    <div class="player-profile">
        <h4>@player.FirstName @player.Nickname @player.LastName</h4>
        <p><strong>Imię:</strong> @player.FirstName</p>
        <p><strong>Nick:</strong> @player.Nickname</p>
        <p><strong>Nazwisko:</strong> @player.LastName</p>
        <p><strong>Data urodzenia:</strong> @player.DateOfBirth.ToString("dd.MM.yyyy")</p>
        <p><strong>Kraj:</strong> @player.Country</p>
        <p><strong>Rola:</strong> @player.Role</p>
        <p><strong>Drużyna:</strong> @player.team.Name</p>
    </div>
}

@code {
    [Parameter] public int PlayerId { get; set; }

    private PlayerDto? player;

    protected override async Task OnInitializedAsync()
    {
        // Pobieramy dane gracza z API, upewnij się, że endpoint "api/players/{id}" zwraca wszystkie potrzebne informacje
        player = await Http.GetFromJsonAsync<PlayerDto>($"api/Players/{PlayerId}");
    }
}
<style>
    .player-profile {
        padding: 1rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: var(--card-bg, #fff);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        max-width: 600px;
        margin: 1rem auto;
    }

    .player-profile h4 {
        margin-bottom: 0.5rem;
    }

    .player-profile p {
        margin: 0.25rem 0;
    }
</style>
